pipeline {
      agent any

      tools {nodejs "NodeJS"}

      parameters{
        booleanParam(name: 'skip_build', defaultValue: true, description: 'Set to true to skip the build stage')
        booleanParam(name: 'skip_sonar', defaultValue: true, description: 'Set to true to skip the build stage')
        booleanParam(name: 'skip_jmeter', defaultValue: true, description: 'Set to true to skip the build stage')
      }
     
      stages {
        stage('Run automated tests') {
            when { expression { params.skip_build != true } }
            steps {
                echo "Running automated tests"
                
                sh 'npm install'
                sh 'npm run cypress:run'
            }            
        }

        stage('SonarQube analysis') {
            when { expression { params.skip_sonar != true } }
            steps {
                script {
                    scannerHome = tool 'sonar-scanner'
                }
                withSonarQubeEnv('sonar-scanner') { // Replace thisname by the one you setup in the SonarQube Jenkins
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }

        stage('JMeter Test') {
            when { expression { params.skip_jmeter != true } } 
            steps {
                script {
                    // Path to the JMeter installation directory
                    def jmeterHome = '/usr/share/jmeter'

                    // Path to the JMeter test script
                    def jmeterScript = './testPlanHome.jmx'

                    // Execute JMeter test
                    sh "${jmeterHome}/bin/jmeter -n -t ${jmeterScript} -l result.jtl"
                }
            }
        }

        stage('Perform manual testing...'){
            steps {
                timeout(activity: true, time: 2) {
                    input 'Proceed to production?'
                }
           }
        }

    }

}